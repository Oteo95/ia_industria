import os
from fastapi import FastAPI, File, UploadFile
from typing import List
from pydantic import BaseModel

from fastapi.middleware.cors import CORSMiddleware
import requests
import json

from pathlib import Path
from typing import Union

from fastapi.responses import FileResponse
from starlette.requests import Request
from starlette.staticfiles import StaticFiles
from starlette.templating import Jinja2Templates

import datetime


def generate_response(system_prompt: str, prompt: str):

    return "hello"


PATH_TO_VUE_APP_BUILD_DIR = f"{os.path.dirname(os.path.realpath(__file__))}/dist"
# For these files on root level, index.html fallback should not happen
STATIC_TOP_LEVEL_FILES = [
    "favicon.ico",
    "manifest.json",
    "logo192.png",
    "logo512.png",
    "robots.txt",
]

app = FastAPI()

origins = [
    "http://localhost:3000",
    "*"
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,  # Allows specified origins
    allow_credentials=True,
    allow_methods=["*"],  # Allows all methods
    allow_headers=["*"],  # Allows all headers
)


@app.post("/submit_feedback/")
async def submit_feedback():
   
    return {"response": "Done"}


class Message(BaseModel):
    user_message: str
    chat_history: list


# Create a POST endpoint
@app.post("/submit_messages/")
async def submit_messages_snow(message: Message):
    # Process the message (example)

    return {"response": "hi", "reference": []}


# https://stackoverflow.com/a/70065066/3652805
def serve_react_app_wrapper(outer_app: FastAPI, build_dir: Union[Path, str]) -> FastAPI:
    """Serves a React application in the root directory `/`

    Args:
        outer_app: FastAPI application instance
        build_dir: React build directory (generated by `yarn build` or
            `npm run build`)

    Returns:
        FastAPI: instance with the react application added
    """
    if isinstance(build_dir, str):
        build_dir = Path(build_dir)

    app.mount(
        "/",
        StaticFiles(directory=PATH_TO_VUE_APP_BUILD_DIR, html=True),
        name="VueApp"
    )

    outer_app.mount(
        "/",
        StaticFiles(directory=PATH_TO_VUE_APP_BUILD_DIR, html=True),
        name="VueApp"
    )
    templates = Jinja2Templates(directory=build_dir.as_posix())

    @outer_app.get("/{full_path:path}", include_in_schema=False)
    async def serve_react_app(
        request: Request, full_path: str
    ):  # pylint: disable=unused-argument
        """Serve the react app
        `full_path` variable is necessary to serve each possible endpoint with
        `index.html` file in order to be compatible with `react-router-dom`
        """
        if full_path in STATIC_TOP_LEVEL_FILES:
            return FileResponse(build_dir / full_path)
        return templates.TemplateResponse("index.html", {"request": request})

    return outer_app


app = serve_react_app_wrapper(app, PATH_TO_VUE_APP_BUILD_DIR)

